Given the root of a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.

 

Example 1:


Input: root = [1,2,3,null,5,null,4]
Output: [1,3,4]
Example 2:

Input: root = [1,null,3]
Output: [1,3]
Example 3:

Input: root = []
Output: []



/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public: vector<int>s; int flag=0;
    
    void rightview(TreeNode* root,int level)
    {
        if(root==NULL)
            return;
        
        if(level > s.size())
        {
            
            s.push_back(root->val);
        }
        
       rightview(root->right,level+1);
       rightview(root->left,level+1);
        
        
    }
    vector<int> rightSideView(TreeNode* root) {
      
        rightview(root,1);
        return s;
        
    }
};
