Given an integer array nums, find a contiguous non-empty subarray within the array that has the largest product, and return the product.

The test cases are generated so that the answer will fit in a 32-bit integer.

A subarray is a contiguous subsequence of the array.

Approach: apply kadane algo from both side.

class Solution {
public:
    int maxProduct(vector<int>& nums) {

        int cur=nums[0],maxy=nums[0],maxz=nums[nums.size()-1];

        for(int i=1;i<nums.size();i++)
        {
            if(cur==0)
            cur=1;
            cur=cur*nums[i];
           
            maxy=max(maxy,cur);

        }
cur=nums[nums.size()-1];
        for(int i=nums.size()-2;i>=0;i--)
        {
            if(cur==0)
            cur=1;
            cur=cur*nums[i];
           
            maxz=max(maxz,cur);

        }
        return max(maxy,maxz);
        
    }
};

