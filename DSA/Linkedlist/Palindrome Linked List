Given the head of a singly linked list, return true if it is a palindrome or false otherwise.


Example 1:


Input: head = [1,2,2,1]
Output: true
Example 2:


Input: head = [1,2]
Output: false



/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        
        ListNode *cur=head;
        
       stack<int>s;
        
        while(cur)
        {
            s.push(cur->val);
            cur=cur->next;
        }
        cur=head;
        
        while(!s.empty())
        {
            
           if(s.top()!=cur->val)
               return false;
           
            s.pop();
            cur=cur->next;
            
        }
        return true;
        }
    
};
